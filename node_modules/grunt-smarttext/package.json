{
  "name": "grunt-smarttext",
  "description": "Preprocess text in html files replacing quotes, ellipses, and other characters with their encoded utf equivalent",
  "version": "0.1.4",
  "homepage": "https://github.com/nrub/grunt-smarttext",
  "author": {
    "name": "Paul English",
    "email": "paul@onfrst.com",
    "url": "http://nrub.onfrst.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/nrub/grunt-smarttext.git"
  },
  "bugs": {
    "url": "https://github.com/nrub/grunt-smarttext/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/nrub/grunt-smarttext/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "grunt",
    "quotes",
    "singlequotes",
    "doublequotes",
    "ellipses",
    "widows",
    "smarten",
    "emdash"
  ],
  "dependencies": {
    "jsdom": "~0.7.0"
  },
  "readme": "# grunt-smarttext\n\n> Preprocess text in html files replacing quotes, ellipses, and other characters with their encoded utf equivalent\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-smarttext --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-smarttext');\n```\n\n## The \"smarttext\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `smarttext` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  smarttext: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.singles\nType: `Boolean`\nDefault value: `true`\n\nShould the parser replace single quotes with their smart equivalent\n\n#### options.apostrophes\nType: `Boolean`\nDefault value: `true`\n\nShould the parser replace apostrophes with their smart equivalent\n\n#### options.doubles\nType: `Boolean`\nDefault value: `true`\n\nShould the parser replace double quotes with their smart equivalent\n\n#### options.emdashes\nType: `Boolean`\nDefault value: `true`\n\nShould the parser replace emdashes, `--`, with their smart equivalent\n\n#### options.ellipses\nType: `Boolean`\nDefault value: `true`\n\nShould the parser replace ellipses with their smart equivalent\n\n#### options.widows\nType: `Boolean`\nDefault value: `true`\n\nShould the parser prevent widows using a non-breaking space.\n\n#### options.custom_replacements\nType: `Array of Arrays`\nDefault value: `[]`\n\nCustom replacements that should be applied to your html text. Should be\nof the form `[/regex/g, 'replacement string']`.\n\n### Usage Examples\n\n#### Default Options\nBy default all the replacements will run on your html files, with\nexception of custom replacements.\n\n```js\ngrunt.initConfig({\n  smarttext: {\n    options: {},\n    files: [{\n      'expand': true,\n      'cwd': 'test/fixtures',\n      'src': ['**/*.html'],\n      'dest': 'tmp'\n    }],\n  },\n})\n```\n\n#### Custom Options\n\n```js\ngrunt.initConfig({\n  smarttext: {\n    options: {\n      ellipses: false,\n      widows: false,\n    },\n    files: [{\n      'expand': true,\n      'cwd': 'test/fixtures',\n      'src': ['**/*.html'],\n      'dest': 'tmp'\n    }],\n  },\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n* `0.1.0` - Initial release. Able to replace singlequotes, doublequotes, apostrophes, emdashes, ellipses, custom replacers, and prevent widows.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-smarttext@0.1.4",
  "dist": {
    "shasum": "7bb9d453004fb420242b4d6ff4e731d3088cd60f",
    "tarball": "http://registry.npmjs.org/grunt-smarttext/-/grunt-smarttext-0.1.4.tgz"
  },
  "_from": "grunt-smarttext@0.1.4",
  "_npmVersion": "1.2.15",
  "_npmUser": {
    "name": "nrub",
    "email": "paul@onfrst.com"
  },
  "maintainers": [
    {
      "name": "nrub",
      "email": "paul@onfrst.com"
    }
  ],
  "directories": {},
  "_shasum": "7bb9d453004fb420242b4d6ff4e731d3088cd60f",
  "_resolved": "https://registry.npmjs.org/grunt-smarttext/-/grunt-smarttext-0.1.4.tgz"
}
